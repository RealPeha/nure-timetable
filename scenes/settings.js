const Scene    = require('telegraf/scenes/base'),
      Keyboard = require('../utils/keyboard'),
      Update   = require('../utils/update'),
      Schedule = require('../utils/schedule'),
      Fun      = require('../utils/forfun'),
      moment   = require('moment')

module.exports = new Scene('settings')
.enter(async (ctx) => {
    const user = ctx.session.user
    let text = `üîé <b>–í—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞:</b> ${user.group.join(', ')}\n`
    let lastUpdateText = []
    for (let group of user.group) {
        const lastUpdate = await Update.get(group)
        if (lastUpdate) {
            lastUpdateText.push(`${lastUpdate.date} –≤ ${lastUpdate.time}`)
        } else {
            lastUpdateText.push(`–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ`)
        }
    }
    if (lastUpdateText.length) {
        text += `üíæ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> ${lastUpdateText.join(', ')}\n`
    } else {
        text += `üíæ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\n`
    }
    ctx.replyWithHTML(text, Keyboard.new(['–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', '–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ']).add(['–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≥—Ä—É–ø–ø'], 1).add(['–ù–∞–∑–∞–¥'], 2).draw())
    .catch(() => console.log(`(settings) User ${ctx.from.id} blocked`))
})
.hears('–ù–∞–∑–∞–¥', ({ scene }) => scene.enter('menu'))
.hears('–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', ({ scene }) => scene.enter('select'))
.hears('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≥—Ä—É–ø–ø', ({ scene }) => scene.enter('join'))
.hears('–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ', async (ctx) => {
    const now = moment()
    const lastUpdateAll = (await Update.get(ctx.session.user.group))
    if (!lastUpdateAll) {
        await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
        return ctx.scene.enter('settings')
    }
    let lastUpdate = lastUpdateAll.date
    lastUpdate = moment(lastUpdate, 'DD.MM.YYYY')
    const duration = now.diff(lastUpdate, 'days')
    if (duration > 0) {
        await ctx.replyWithHTML(`<b>–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è...</b>\n\n<b>–ù–∞ –∑–∞–º–µ—Ç–∫—É:</b> –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–µ. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –¥–æ –≤–∞—Å —É–∂–µ –æ–±–Ω–æ–≤–ª—è–ª —ç—Ç—É –≥—Ä—É–ø–ø—É, —Ç–æ –≤–∞–º –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ü–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –æ–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—É–Ω–∫—Ç "–û–±–Ω–æ–≤–ª–µ–Ω–æ" –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –µ—Å–ª–∏ —Ç–∞–º —Å—Ç–æ–∏—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞, —Ç–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è—Ç—å –Ω–µ—Ç —Å–º—ã—Å–ª–∞`, Keyboard.new().clear())
        ctx.replyWithHTML(`<i>${Fun.load()}</i>`)
        await Schedule.update(ctx.session.user)
    } else {
        await ctx.replyWithHTML(`–£ –≤–∞—Å —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ`, Keyboard.new().clear())
    }
    ctx.scene.enter('settings')
})
